services:
  init:
    image: timescale/timescaledb-ha:pg15
    user: root
    network_mode: ${DOCKER_NETWORK_MODE}
    volumes:
      - ${PERSISTENCE_DIRECTORY}/cortex/timescaledb:/home/postgres/pgdata/data
      - ${PERSISTENCE_DIRECTORY}/cortex/grafana:/var/lib/grafana
    entrypoint:
      - sh
      - -c
      - |
        chown -R ${DOCKER_CONTAINER_USER} /home/postgres/pgdata/data /var/lib/grafana

  database:
    depends_on:
      init:
        condition: service_completed_successfully
    image: ${TIMESCALE_IMAGE}
    restart: always
    hostname: ${TIMESCALE_CONTAINER}
    container_name: ${TIMESCALE_CONTAINER}
    user: ${DOCKER_CONTAINER_USER}
    network_mode: ${DOCKER_NETWORK_MODE}
    env_file:
      - .env
    environment:
      - PGTZ=${TZ}
      - PGHOSTNAME=${DB_HOSTNAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TIMESCALEDB_TELEMETRY=off
    volumes:
      - ${PERSISTENCE_DIRECTORY}/cortex/timescaledb:/home/postgres/pgdata/data
      - ${TIMESCALE_CONFIG}/init:/docker-entrypoint-initdb.d:ro
    deploy:
      resources:
        limits:
          cpus: ${TIMESCALE_CPU_LIMIT}
          memory: ${TIMESCALE_MEMORY_LIMIT}
        reservations:
          cpus: ${TIMESCALE_CPU_RESERVATION}
          memory: ${TIMESCALE_MEMORY_RESERVATION}

  dashboard:
    depends_on:
    - init
    - database
    image: ${GRAFANA_IMAGE}
    user: ${DOCKER_CONTAINER_USER}
    restart: always
    hostname: ${GRAFANA_CONTAINER}
    container_name: ${GRAFANA_CONTAINER}
    network_mode: ${DOCKER_NETWORK_MODE}
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=
      - GF_SERVER_HOSTNAME=${GRAFANA_HOSTNAME}
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT}
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - POSTGRES_USER=${DB_USER}
    volumes:
      - ${PERSISTENCE_DIRECTORY}/cortex/grafana:/var/lib/grafana
      - ${GRAFANA_CONFIG}/provisioning:/etc/grafana/provisioning
      - ${GRAFANA_CONFIG}/dashboards:/var/lib/grafana/dashboards
#      - ${GRAFANA_CONFIG}/plugins/dist:/var/lib/grafana/plugins/urdf-viewer
      - ${GRAFANA_CONFIG}/.ini:/etc/grafana/grafana.ini
    deploy:
      resources:
        limits:
          cpus: ${GRAFANA_CPU_LIMIT}
          memory: ${GRAFANA_MEMORY_LIMIT}
        reservations:
          cpus: ${GRAFANA_CPU_RESERVATION}
          memory: ${GRAFANA_MEMORY_RESERVATION}
